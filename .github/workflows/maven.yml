# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# .github/workflows/maven.yml

name: Java CI with Maven

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
          - 1433:1433
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: "StrongP@ssw0rd123"

    env:
      SPRING_DATASOURCE_URL: jdbc:sqlserver://localhost:1433;databaseName=SME_DB;encrypt=true;trustServerCertificate=true
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_DATASOURCE_PASSWORD: StrongP@ssw0rd123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Check for existing container using port 1433
        run: |
          if lsof -i:1433; then
            echo "Port 1433 is already in use. Stopping conflicting container."
            docker ps -q --filter "ancestor=mcr.microsoft.com/mssql/server:2019-latest" | xargs -r docker stop
          fi

      - name: Run SQL Server container (alternative port if necessary)
        run: |
          docker run -d --name sqlserver \
            --user root \
            -e 'ACCEPT_EULA=Y' \
            -e 'SA_PASSWORD=StrongP@ssw0rd123' \
            -p 1433:1433 \
            mcr.microsoft.com/mssql/server:2019-latest || \
          echo "Failed to start on default port, trying port 1434" && \
          docker run -d --name sqlserver \
            --user root \
            -e 'ACCEPT_EULA=Y' \
            -e 'SA_PASSWORD=StrongP@ssw0rd123' \
            -p 1434:1433 \
            mcr.microsoft.com/mssql/server:2019-latest

      - name: Install SQL Server tools and GPG
        run: |
          docker exec -u root -i sqlserver bash -c "\
            apt-get update && \
            apt-get install -y curl apt-transport-https gnupg && \
            curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \
            curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > /etc/apt/sources.list.d/mssql-release.list && \
            apt-get update && \
            ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev && \
            echo 'export PATH=$PATH:/opt/mssql-tools/bin' >> ~/.bashrc && \
            source ~/.bashrc"

      - name: Wait for SQL Server to start
        run: |
          echo "Waiting for SQL Server to start..."
          sleep 30

      - name: Create SME_DB database
        run: |
          docker exec -u root -i sqlserver /opt/mssql-tools/bin/sqlcmd \
            -S localhost -U sa -P StrongP@ssw0rd123 \
            -Q "CREATE DATABASE SME_DB"

      - name: Verify database creation
        run: |
          docker exec -u root -i sqlserver /opt/mssql-tools/bin/sqlcmd \
            -S localhost -U sa -P StrongP@ssw0rd123 \
            -Q "SELECT name FROM sys.databases WHERE name = 'SME_DB'"

      - name: Build and run tests
        run: mvn clean verify --batch-mode

